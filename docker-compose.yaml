version: '3.8'
services:
  mysql:
    image: mysql:5.7
    container_name: proxypool_mysql
    privileged: true
    restart: always
    ports:
      - 3307:3306
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./dockerconfig/mysql/sql/mysql.sql:/app/sql/mysql.sql
      # 把要执行的shell文件放到/docker-entrypoint-initdb.d/目录下，容器会自动执行这个shell
      - ./dockerconfig/mysql/init/docker-entrypoint.sh:/docker-entrypoint-initdb.d/docker-entrypoint.sh
      - ./dockerconfig/mysql/conf/my.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
      - ./dockerconfig/mysql/logs:/var/log/mysql
      - ./dockerconfig/mysql/data:/var/lib/mysql
    command:
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
      --max_allowed_packet=1024M
      --default-authentication-plugin=mysql_native_password
      --sql-mode="STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO"
      --max_connections=3600
    user: root
    networks:
      - app-network

  proxypool:
    image: proxypool:latest
    container_name: proxypool
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - mysql
    ports:
      - "3000:3000"
    volumes:
      - ./dockerconfig/proxypool/logs:/app/logs
      - ./dockerconfig/proxypool/conf/config.yaml:/app/conf/config.yaml
    command: /app/IpProxyPool proxy-pool
    networks:
      - app-network

# 定义网络，可以多个。如果不声明，默认会创建一个网络名称为"工程名称_default"的 bridge 网络
networks:
  # 一个具体网络的条目名称
  app-network:
    # 网络名称，默认为"工程名称_网络条目名称"
    name: app-network
    # 网络模式，默认为 bridge
    driver: bridge
